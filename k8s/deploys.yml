apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-center-be
  namespace: document-center
spec:
  revisionHistoryLimit: 3
  replicas: 1
  selector:
    matchLabels:
      app: document-center-be
  template:
    metadata:
      labels:
        app: document-center-be
    spec:
      containers:
      - name: document-center-be
        image: yjack0000cs12/document-center-be:v50
        ports:
        - containerPort: 3000
        envFrom:
        - secretRef:
            name: document-center-be-secrets
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-db-configmap
  namespace: document-center
data:
  init-db.sh: |
    #!/bin/bash
    set -e
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
        CREATE DATABASE "$POSTGRES_DB";
    EOSQL

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: document-center
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        ports:
        - containerPort: 5432
        envFrom: 
        - secretRef:
            name: postgres-secrets
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata # add this to resolve directory not empty error
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-db
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-db
        configMap:
          name: init-db-configmap
          items:
            - key: init-db.sh
              path: init-db.sh

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: document-center
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio
        args: ["server", "/data"]
        ports:
        - containerPort: 9000
        envFrom:
        - secretRef:
            name: minio-secrets
        volumeMounts:
        - name: minio-storage
          mountPath: /data
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-pvc

